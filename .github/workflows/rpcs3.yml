name: Build RPCS3

defaults:
  run:
    shell: bash
on:
  push:
    #branches:
    #  - master # Only trigger push event on 'master' branch
  pull_request:
  workflow_dispatch:

concurrency:
  group: ${{ github.ref }}-${{ github.event_name }}
  cancel-in-progress: true

env:
  LLVMVER: '20.1.8'

jobs:
  Win32_Build:
    name: Windows LLVM Build
    runs-on: windows-2025
    #env:
    #  LLVMVER: '20.1.8'
    steps:
      - name: Configure LLVM
        run: |
          git clone -b llvmorg-${{ env.LLVMVER }} --depth 1 https://github.com/llvm/llvm-project.git
          mkdir llvm_build
          cd llvm_build
          cmake -G "Visual Studio 17 2025" ../llvm-project/llvm -Thost=x64 -DLLVM_TARGETS_TO_BUILD="X86" -DLLVM_DEFAULT_TARGET_TRIPLE:STRING=x86_64-pc-windows-msvc -DLLVM_HOST_TRIPLE:STRING=x86_64-pc-windows-msvc -DCMAKE_BUILD_TYPE=Release -DLLVM_BUILD_RUNTIME=OFF -DLLVM_BUILD_TOOLS=OFF -DLLVM_INCLUDE_DOCS=OFF -DLLVM_INCLUDE_EXAMPLES=OFF -DLLVM_INCLUDE_TESTS=OFF -DLLVM_INCLUDE_BENCHMARKS=OFF -DLLVM_INCLUDE_UTILS=OFF -DLLVM_USE_INTEL_JITEVENTS=ON -DLLVM_ENABLE_Z3_SOLVER=OFF -DCMAKE_SYSTEM_VERSION=6.1 -DCMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION=10.0 -DLLVM_USE_CRT_DEBUG=MTd -DLLVM_USE_CRT_RELEASE=MT -DCMAKE_MSVC_RUNTIME_LIBRARY=MultiThreaded

      - name: Build LLVM
        run: |
          cd llvm_build
          cmake --build . --config Release -- /maxcpucount

      - name: Package LLVM Libraries
        run: |
          mkdir llvm_out
          cd llvm_out
          mkdir build
          cd build
          mkdir llvm
          cd llvm
          mkdir cmake
          mkdir include
          mkdir tools
          xcopy "..\..\..\llvm-project\llvm\cmake" ".\cmake" /E
          xcopy "..\..\..\llvm-project\llvm\include" ".\include" /E
          cd ..\
          mkdir llvm_build
          cd llvm_build
          mkdir Release
          mkdir include
          mkdir lib
          cd lib
          mkdir cmake
          cd ..\
          xcopy "..\..\..\llvm_build\Release" ".\Release" /E
          xcopy  "..\..\..\llvm_build\include" ".\include" /E
          xcopy  "..\..\..\llvm_build\lib\cmake" ".\lib\cmake" /E
          cd ..\
          7z a -t7z -m0=lzma2 -mx=9 -aoa -r "llvmlibs_mt.7z" *

      - name: Generate sha256
        shell: bash
        run: |
          cd llvm_out/build
          sha256sum llvmlibs_mt.7z | awk '{ print $1 }' > llvmlibs_mt.7z.sha256

      - name: Upload LLVM
        run: |
          ls -al ./
          wget -c https://github.com/tcnksm/ghr/releases/download/v0.13.0/ghr_v0.13.0_linux_amd64.tar.gz
          tar xfv ghr_v0.13.0_linux_amd64.tar.gz
          ghr_v0.13.0_linux_amd64/ghr -u qurious-pixel -r rpcs3 -recreate -n 'LLVM build' -b "$(printf "LLVM Build ${{ env.LLVMVER }})" custom-build-win-${{ env.LLVMVER }} ./
          #ghr_v0.13.0_linux_amd64/ghr -u rpcs3 -r llvm-mirror -recreate -n 'LLVM build' -b "$(printf "LLVM Build ${{ env.LLVMVER }})" custom-build-win-${{ env.LLVMVER }} ./
        env:
          DEFAULT_BRANCH: master
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
